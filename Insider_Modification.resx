<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAQEhMSEhMQFRIVEhUVFRgXFRAQEBUYFRIXGBYSFRYY
        HSggGBomGxUVITEiJSsrLi4uFyAzODMsNygtLiv/2wBDAQoKCg4NDhsQEBstJR8mLy0tLS0tLS0tLTUt
        Ky0tLS0tKy0tLS0vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADgAOADAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAQFAgMGAQf/xABHEAABAwIDBAcFAwgHCQAAAAABAAIDBBEFEiEGMUFR
        EyJhcYGRoRQyQrHBI1LRB2Jyc8LS4fA0dIKSorKzFSQlQ1NUg5PT/8QAGgEBAAMBAQEAAAAAAAAAAAAA
        AAIDBAEFBv/EADQRAQACAQIDAwsEAgMBAAAAAAABAgMEERIhMQUTQSIyUWFxgZGhsdHwFELB4TM0IyTx
        Q//aAAwDAQACEQMRAD8A+4oCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIPCUGLpQOKDU6sYOIQ
        eCtZzCDNtQ08UGwPBQZICAgICAgICAgICAgICAgICAgICDwmyCHUYg0aDUoIEta93GyCM5xO8lBgUHhQ
        Y5rINsdW9vFBNp8V4O0QWcVQHINyAgICAgICAgICAgICAgICAg1zTBouUFRU1bn9gQRig0VVVHE3NI9j
        G83ENHmV2ImeUOWtFY3mXPVm3FGzRpkkP5jNPN9vRaK6XJbwY76/DXx39ivk2/b8NO898jW/JpVsaG3j
        LPPauOOkEe3zfip3jue13zASdBfwkjtXH4xKfSbZUcmjnPjP57SB5tuB4qq2ky18N2nHr8F/Hb2ruKdk
        jQ5jmuadxaQ5p8Qs8xMTtLXW0TG8PSuOtkFU5h03ckF5Q14cEFgDdB6gICAgICAgICAgICAgINc8oaLl
        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
        z3OHcRqrMeW+PzZ2U5cGPLG143VE2zjPgke3sIDx9Ftp2jePOjd5mXsbFbzZmPm0HAZRuew9+Yfir47U
        r41lkt2FbwtD1uCycXs8Mx/BdntSvhWXI7Bv43hvjwdo957j3WaPqs9+0sk+bG3zasXYeGvnzM/JMihY
        z3WgfPxO9YsmW+Sd7Tu9TDp8WGNsdYh65yrXPYIHSGzR+CDo8LwwM7Sg6OkprIJiAgICAgICAgICAgIC
        AgIPHNugra3Dw7ggoavC3N93yQVsjHN3ghBqLkdYFyDEuRxrc5B6yJztwJQT6XB3O1d5IOgosOA0AQXF
        PTBqCSgICAgICAgICAgICAgICAgICDVJACggz4cCgr58HafhQRH4I3kUGIwNvIoN8WDNHwoJ8OG24IJs
        VEAglsYAgyQEBAQEBAQEBAQEBAQEBAQEBAQEBB4Qg8MYQedGEHoYEHtkHqAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIP/Z
</value>
  </data>
</root>